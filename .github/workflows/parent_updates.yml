name: 'parent updates'

on: 
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PARENT_REPOSITORY: 'hwany7seo/test_action'
      CHECKOUT_BRANCH: 'main'
      PR_AGAINST_BRANCH: 'main'
      OWNER: 'autopr'
      LABEL: Update Submodule
    steps:
    - uses: actions/checkout@v2
    - name: get last commit message
      shell: bash
      run: |
        echo "{msg}=$(git log -1 --format=%s)" >> $GITHUB_OUTPUT
      id: getcommitmsg
    - name: Checkout parent repository and branch
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.github_token }}
        repository: ${{ inputs.parent_repository }}
        ref: ${{ inputs.checkout_branch }}
        submodules: true
        fetch-depth: 0

  - name: Create new branch and push changes
    shell: bash
    run: |
      git config user.name github-actions
      git config user.email github-actions@github.com
      git submodule update --remote
      git checkout -b $GITHUB_RUN_ID
      git commit -am "'${{ steps.getcommitmsg.outputs.msg }}'"
      git push --set-upstream origin $GITHUB_RUN_ID
  - name: Create pull request against target branch
    uses: actions/github-script@v6
    with:
      github-token: ${{ secrets.TOKEN }}
      script: |
        await github.rest.pulls.create({
          owner: '${{ env.OWNER }}',
          repo: '${{ env.PARENT_REPOSITORY }}'.split('/')[1].trim(),
          head: process.env.GITHUB_RUN_ID,
          base: '${{ env.PR_AGAINST_BRANCH }}',
          title: '[Auto-generated] Submodule Updates ${process.env.GITHUB_RUN_ID}',
          body: '[Auto-generated] Submodule Updates ${{ steps.getcommitmsg.outputs.msg }}',
        });
  - name: Add labels
    uses: actions/github-script@v6
    with:
      github-token: ${{ secrets.TOKEN }}
      script: |
        const res = await github.rest.issues.listForRepo({
          owner: '${{ env.OWNER }}',
          repo: '${{ env.PARENT_REPOSITORY }}'.split('/')[1].trim(),
        });
        const pr = res.data.filter(i => i.title.includes(process.env.GITHUB_RUN_ID));
        const prNumber = pr[0].number;  
        await github.rest.issues.addLabels({
          issue_number: prNumber,
          owner: '${{ env.OWNER }}',
          repo: '${{ env.PARENT_REPOSITORY }}'.split('/')[1].trim(),
          labels: ['${{ env.LABEL }}']
        });

